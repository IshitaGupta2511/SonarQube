pipeline {
    agent any

    stages {
        stage('install-docker') {
            steps {
                sh'''
                sudo yum install docker -y
                sudo systemctl start docker
                sudo systemctl enable docker
                create () {
                    sudo docker network create sonar-network
                }
                if ! create; then
                    echo "Already exists"
                fi
                '''
            }
        }
        stage('install-sonarqube') {
            steps {
                sh'''
                install () {
                    sudo echo "database container"
                    sudo docker run -d --name sonar-db --network sonar-network -e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -e POSTGRES_DB=sonar postgres:9.6
                    sudo echo "Sonar container"
                    sudo docker run -d --name sonar -p 9000:9000 --network sonar-network -e SONARQUBE_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar -e SONAR_JDBC_USERNAME=sonar -e SONAR_JDBC_PASSWORD=sonar sonarqube
                }
                if ! install; then
                    echo "Already done"
                fi
                    '''
            }
        }
        stage('git-clone for testing') {
            steps {
                sh'''
                git () {
                    sudo git clone https://github.com/spring-petclinic/spring-framework-petclinic.git
                    sudo yum install maven -y
                }
                if ! git; then
                    echo "Already done"
                fi
                sudo cd /var/lib/jenkins/workspace/sonar/spring-framework-petclinic 
                sudo mvn clean package
                sudo mvn sonar:sonar  -Dsonar.host.url=http://54.215.197.96:9000/ -Dsonar.login=sqa_da52323c9d652f241e0ef9a98069364f36502be1
                '''
            }
        }
    }
}
